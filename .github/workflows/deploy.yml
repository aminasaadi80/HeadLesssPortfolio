name: Deploy to Server

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 60   # سقف تایم کل جاب در GitHub Actions

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT || '9011' }}
          timeout: 30s                # تایم‌اوت اتصال SSH
          command_timeout: 45m        # تایم‌اوت اجرای اسکریپت روی سرور
          script: |
            export DOCKER_BUILDKIT=1
            export COMPOSE_DOCKER_CLI_BUILD=1
            
            cd /srv/app/react/portfolio
            
            # Pull latest changes
            git pull origin main
            
            # Create optimized Dockerfile (with cache for npm)
            cat > Dockerfile <<'EOF'
            # syntax=docker/dockerfile:1.7
            FROM node:20-alpine AS builder
            WORKDIR /app
            COPY package*.json ./
            # استفاده از کش npm
            RUN --mount=type=cache,target=/root/.npm \
                if [ -f package-lock.json ]; then \
                  npm ci --legacy-peer-deps; \
                else \
                  npm install --legacy-peer-deps; \
                fi
            COPY . .
            RUN node -e "const fs=require('fs');['tsconfig.json','tsconfig.app.json','tsconfig.node.json'].forEach(f=>{if(fs.existsSync(f)){let raw=fs.readFileSync(f,'utf8');let clean=raw.replace(/\\/\\*[\\s\\S]*?\\*\\//g,'').replace(/\\/\\/.*$/gm,'');let j=JSON.parse(clean);j.compilerOptions=j.compilerOptions||{};j.compilerOptions.noUnusedLocals=false;j.compilerOptions.noUnusedParameters=false;j.compilerOptions.skipLibCheck=true;fs.writeFileSync(f,JSON.stringify(j,null,2));console.log('✔️ patched',f)}})"
            RUN npm run build
            
            FROM nginx:1.27-alpine
            WORKDIR /usr/share/nginx/html
            RUN rm -f /etc/nginx/conf.d/default.conf
            COPY nginx.conf /etc/nginx/conf.d/default.conf
            COPY --from=builder /app/dist ./
            EXPOSE 80
            HEALTHCHECK --interval=30s --timeout=3s CMD wget -qO- http://127.0.0.1/ >/dev/null || exit 1
            EOF
            
            # Stop existing containers (ignore errors)
            docker compose down || true
            
            # Build and start (بدون --no-cache تا کش لایه‌ها حفظ شود)
            docker compose build --progress=plain
            docker compose up -d
            
            # Clean up dangling stuff (اختیاری)
            docker system prune -f
            
            # Test deployment
            sleep 5
            curl -I http://127.0.0.1:3001 || echo "Service check failed"
            
            echo "✅ Deployment complete!"
